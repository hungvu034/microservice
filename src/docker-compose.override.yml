version: '3.8'

services:
  #database section 

  #orderdb sql server
  orderdb:
    container_name: orderdb
    environment: 
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_data:/var/lib/sqlserver/data
    ports:
      - "1435:1433"

  #productdb mysql
  productdb:
    container_name: productdb
    environment:
     MYSQL_ROOT_PASSWORD: "Password123"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql 
    ports:
      - "3306:3306"  
    
  #customerdb postgresdb
  customerdb:
    container_name: customerdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password123
      - POSTGRES_DB=Customerdb
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  #basketdb redis
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  #inventorydb mongo
  inventorydb:
    container_name: inventorydb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db 
  
  #infrastructure section
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    
  pgadmin:
    container_name: pgadmin
    environment: 
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Password123
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin 
  # admin - vh0987654321
  portainer:
    container_name: portainer
    restart: always 
    ports:
      - "8080:8080"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - protainer_data:/data 

  elasticsearch:
    container_name : elasticsearch
    environment: 
      - xpack.monitoring.enabled=true 
      - xpack.watcher.enabled=false
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana 
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  #microservice section 
  product.api:
    container_name: product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:DefaultConnectionStrings=Server=productdb;Port=3306;Database=ProductDb;Uid=root;Pwd=Password123;
    depends_on:
      - productdb
    ports:
      - 6002:80
    restart: always 

  customer.api:
    container_name: customer.api
    ports:
      - 6003:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:DefaultConnectionStrings=Host=customerdb;Port=5432;Database=CustomerDb;Username=admin;Password=Password123;Integrated Security=false;
    depends_on:
      - customerdb

  basket.api:
    container_name: basket.api 
    ports:
      - 6004:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - CacheSetting:ConnectionString=basketdb:6379
    depends_on:
      - basketdb
